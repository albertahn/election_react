{"version":3,"sources":["webpack://clean-mixer/webpack/runtime/create fake namespace object","webpack://clean-mixer/./src/pages/MainPage.js","webpack://clean-mixer/./src/app.js","webpack://clean-mixer/./src/index.js","webpack://clean-mixer/./src/services/pedersen.js","webpack://clean-mixer/./src/utils/crypto.js","webpack://clean-mixer/./src/services/idb.js","webpack://clean-mixer/./src/services/events.js","webpack://clean-mixer/./src/services/bloom.js","webpack://clean-mixer/./src/services/mimc.js","webpack://clean-mixer/./src/services/merkleTree.js","webpack://clean-mixer/./src/services/snark.js","webpack://clean-mixer/./src/services/web3.js","webpack://clean-mixer/./src/utils/config.js","webpack://clean-mixer/webpack/bootstrap","webpack://clean-mixer/webpack/runtime/amd options","webpack://clean-mixer/webpack/runtime/compat get default export","webpack://clean-mixer/webpack/runtime/define property getters","webpack://clean-mixer/webpack/runtime/global","webpack://clean-mixer/webpack/runtime/hasOwnProperty shorthand","webpack://clean-mixer/webpack/runtime/make namespace object","webpack://clean-mixer/webpack/runtime/node module decorator","webpack://clean-mixer/webpack/runtime/jsonp chunk loading","webpack://clean-mixer/webpack/startup"],"names":["leafPrototypes","getProto","pathName","useLocation","pathname","useState","depositLoading","setDepositLoading","substring","referrer","commitment","setCommitment","onCopyHandler","window","navigator","clipboard","writeText","alert","onDepositHandler","snarkServiceInterface","note","commitmentHex","message","className","type","placeholder","style","borderRadius","Deposit","loading","CommitmentModal","show","handleClose","Navbar","path","element","render","document","getElementById","Pedersen","this","pedersenHash","babyJub","initPedersen","buildPedersenHash","buffer","unpackPoint","hash","F","toString","toFixedHex","value","length","isBuffer","Buffer","str","BigInt","padStart","parseNote","split","currency","amount","netId","secret","commitmentHash","checkCommitments","events","forEach","i","leafIndex","console","error","Error","$nuxt","$t","formatEvents","map","blockNumber","transactionHash","returnValues","timestamp","Number","nullifierHash","to","fee","sleep","ms","Promise","resolve","setTimeout","genProofArgs","proof","pub","unstringifyBigInts","groth16","calldata","args","JSON","parse","o","test","Array","isArray","res","Object","keys","k","toBigIntLE","buf","reversed","from","reverse","hex","IndexedDB","stores","dbName","dbExists","isBlocked","options","upgrade","db","values","objectStoreNames","deleteObjectStore","name","keyPath","indexes","store","createObjectStore","autoIncrement","unique","createIndex","openDB","onEventHandler","includes","_removeExist","addEventListener","deleteDB","initDB","params","undefined","_getFromIndex","storeName","indexName","key","getFromIndex","_getAllFromIndex","count","getAllFromIndex","transaction","objectStore","get","data","tx","add","put","getAll","mode","clear","done","index","item","err","networkName","Web3Service","instances","Map","DEPOSIT_INDEXES","WITHDRAWAL_INDEXES","defaultState","NetConfig","tokens","nativeCurrency","networkId","push","token","instanceAddress","instance","set","eventsType","EventService","factoryMethods","idb","contract","getContract","isNative","hasCache","getEventsFromDB","cachedEvents","getEventsFromCache","deployedBlock","getEvents","savedEvents","fromBlock","parseInt","lastBlock","getEventsFromBlock","newEvents","allEvents","concat","sort","a","b","saveEvents","eventName","eventToFind","instanceName","getInstanceName","event","find","updateEvents","freshEvents","address","tornadoAddress","Web3","rpc","eth","Contract","InstanceABI","eventsCount","blockRange","getBlocksDiff","blockDifference","currentBlockNumber","numberParts","Math","ceil","part","toBlock","getEventsPartFromRpc","partOfEvents","_web3","getBlockNumber","getPastEvents","string","charAt","toUpperCase","slice","getBatchEventsFromRpc","rpcEvents","getEventsFromRpc","createMultipleTransactions","putItem","EventsFactory","rpcUrl","provider","payload","has","BloomService","fileName","fileFolder","download","contentType","cachedBloom","BloomFilter","stringifyCachedBloom","tree","getBloomFromDB","bloom","hashBloom","serialize","Mimc","sponge","initMimc","buildMimcSponge","left","right","multiHash","mimc","trees","MerkleTreeService","bloomService","init","partNumber","MerkleTree","merkleTreeHeight","zeroElement","emptyElement","hashFunction","edge","elements","PartialMerkleTree","GlobalConfig","ganache","downloadEdge","getFileName","initialEdge","partialTree","createPartialTree","checkBloom","slicedEdge","shiftEdge","stringifyCachedTree","parsedTree","savedTree","isPartial","edgeIndex","indexOf","getTreeFromDB","cachedTree","hashTree","treesInterface","SnarkService","tornadoContract","connectTornadoContract","signer","ethers","TornadoAbi","connect","denomination","prefix","nbytes","randomBuf","randomBytes","__pedersenHash","_referrer","String","deposit","wait","result","url","eventsFactory","eventService","getService","root","recipient","wasm","zkey","pathElements","pathIndices","input","publicSignals","proofArgs","returnArguments","treeInstanceName","treeService","all","getTree","eventsData","commitments","el","newLeaves","bulkInsert","createTree","isKnownRoot","saveTree","parsedNote","buildTree","createSnarkProof","pi_a","pi_b","pi_c","account","relayerAddress","relay","withdraw","jszip","Jszip","knownResources","_Web3Service","chainId","ethereum","getNetwork","send","getSigner","getCleanMixerKeys","process","env","REACT_APP_CIRCOM_WASM_CID","REACT_APP_CIRCUIT_ZKEY_CID","getAddress","cid","retryAttempt","log","IPFSGateway","axios","responseType","onDownloadProgress","progressEvent","progress","round","loaded","response","loadAsync","zip","file","async","content","URL","createObjectURL","Blob","goerli","symbol","decimals","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","id","__webpack_modules__","call","m","x","amdO","n","getter","__esModule","d","getPrototypeOf","obj","__proto__","t","then","ns","create","r","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","shift","apply","chunkLoadingGlobal","self","checkDeferredModulesImpl","deferredModule","fulfilled","j","depId","splice","s","bind","startup"],"mappings":"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","file":"main.dd7308e8b57c4f1ce06c.bundle.js","sourcesContent":["var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React, { useState } from \"react\";\nimport Deposit from \"../components/Deposit\";\nimport { snarkServiceInterface } from \"../services/snark\";\nimport { useLocation } from \"react-router-dom\";\nimport CommitmentModal from \"../components/CommitmentModal\";\n\nfunction MainPage() {\n  const location = useLocation();\n  const pathName = location.pathname;\n\n  const [depositLoading, setDepositLoading] = useState(false);\n  const [referrer, setReferrer] = useState(pathName.substring(1));\n  const [commitment, setCommitment] = useState(\"\");\n\n  const onCopyHandler = async () => {\n    await window.navigator.clipboard.writeText(commitment);\n    alert(\"Copied\");\n  };\n\n  const onDepositHandler = async () => {\n    try {\n      setDepositLoading(true);\n      const commitment = await snarkServiceInterface.prepareCommitment();\n      setCommitment(commitment.note);\n      await snarkServiceInterface.sendDeposit(\n        commitment.commitmentHex,\n        referrer\n      );\n      alert(\"Ether deposited successfully.\");\n      setDepositLoading(false);\n    } catch (error) {\n      alert(error?.message || \"Error on deposit\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"mb-4\">\n              <label className=\"mb-2\">Referrer Address</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"0x123...456\"\n                  aria-label=\"Referrer\"\n                  aria-describedby=\"basic-referrer\"\n                />\n                <button className=\"btn btn-primary\">\n                  Edit Code\n                  <i className=\"fa-solid fa-pen-to-square ms-2\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\"></div>\n        </div>\n\n        <div className=\"row gx-4\">\n          <div className=\"col-lg-6\">\n            <div className=\"card p-4\" style={{ borderRadius: 0 }}>\n              <Deposit\n                onDepositHandler={onDepositHandler}\n                loading={depositLoading}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            <div className=\"card\" style={{ borderRadius: 0 }}>\n              Transaction History Page\n            </div>\n          </div>\n        </div>\n      </div>\n      <CommitmentModal\n        show={commitment !== \"\"}\n        handleClose={() => setCommitment(\"\")}\n        onCopyHandler={onCopyHandler}\n        commitment={commitment}\n      />\n    </>\n  );\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n        <Route path=\"/:address\" element={<MainPage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { render } from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./app\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nrender(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","import { buildPedersenHash } from \"circomlibjs\";\n\nclass Pedersen {\n  constructor() {\n    this.pedersenHash = null;\n    this.babyJub = null;\n    this.initPedersen();\n  }\n\n  async initPedersen() {\n    this.pedersenHash = await buildPedersenHash();\n    this.babyJub = this.pedersenHash.babyJub;\n  }\n\n  unpackPoint(buffer) {\n    return this.babyJub.unpackPoint(this.pedersenHash.hash(buffer));\n  }\n\n  toStringBuffer(buffer) {\n    return this.babyJub.F.toString(buffer);\n  }\n}\n\nconst pedersen = new Pedersen();\n\nexport { pedersen };\n","import { BN, toBN } from \"web3-utils\";\nimport crypto from \"crypto\";\nimport { pedersen } from \"../services/pedersen\";\nimport { randomBytes } from \"crypto\";\nimport { groth16 } from \"snarkjs\";\nimport { babyJub, pedersenHash as __pedersenHash } from \"circomlib\";\n\nexport function buffPedersenHash(buffer) {\n  const [hash] = pedersen.unpackPoint(buffer);\n  return pedersen.toStringBuffer(hash);\n}\n\nexport function leInt2Buff(value) {\n  return new BN(value, 16, \"le\");\n}\n\nexport function randomBN(nbytes = 31) {\n  return toBN(leInt2Buff(crypto.randomBytes(nbytes)).toString());\n}\n\nexport function toFixedHex(value, length = 32) {\n  const isBuffer = value instanceof Buffer;\n  const str = isBuffer ? value.toString(\"hex\") : BigInt(value).toString(16);\n  return \"0x\" + str.padStart(length * 2, \"0\");\n}\n\nexport function parseNote(note) {\n  const [, currency, amount, netId, secret, commitmentHash] = note.split(\"-\");\n  return {\n    currency,\n    amount,\n    netId,\n    secret,\n    commitmentHash,\n  };\n}\n\nexport function parseHexNote(thesecret, thenullifier) {\n  let nullBuff = Buffer.from(thenullifier.toString(), \"base64\");\n  let secretBuff = Buffer.from(thesecret.toString(), \"base64\");\n  const preimage = Buffer.concat([nullBuff, secretBuff]);\n\n  const commitment = buffPedersenHash(preimage);\n  const nullifierBuff = thenullifier;\n  const nullifierHash = thenullifier;\n  const nullifier = thenullifier;\n  const secret = thesecret;\n\n  return {\n    secret,\n    nullifier,\n    commitment,\n    nullifierBuff,\n    nullifierHash,\n    commitmentHex: toFixedHex(commitment),\n    nullifierHex: toFixedHex(nullifierHash),\n  };\n}\n\nexport function detectMob() {\n  if (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/webOS/i) ||\n    navigator.userAgent.match(/iPhone/i) ||\n    navigator.userAgent.match(/iPad/i) ||\n    navigator.userAgent.match(/iPod/i) ||\n    navigator.userAgent.match(/BlackBerry/i) ||\n    navigator.userAgent.match(/Windows Phone/i)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function checkCommitments(events = []) {\n  events.forEach(({ leafIndex }, i) => {\n    if (leafIndex !== i) {\n      console.error(`Missing deposit event for deposit #${i}`);\n      throw new Error(window.$nuxt.$t(\"failedToFetchAllDepositEvents\"));\n    }\n  });\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function formatEvents(events, type) {\n  if (type === \"deposit\") {\n    return events.map(({ blockNumber, transactionHash, returnValues }) => {\n      const { commitment, leafIndex, timestamp } = returnValues;\n      return {\n        blockNumber,\n        transactionHash,\n        commitment,\n        leafIndex: Number(leafIndex),\n        timestamp,\n      };\n    });\n  } else {\n    return events.map(({ blockNumber, transactionHash, returnValues }) => {\n      const { nullifierHash, to, fee } = returnValues;\n      return {\n        blockNumber,\n        transactionHash,\n        nullifierHash,\n        to,\n        fee,\n      };\n    });\n  }\n}\n\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function rbuffer(nbytes) {\n  return randomBytes(nbytes);\n}\n\nexport function pedersenHash(data) {\n  return babyJub.unpackPoint(__pedersenHash.hash(data))[0];\n}\n\nexport async function genProofArgs(proof, pub) {\n  proof = unstringifyBigInts(proof);\n  pub = unstringifyBigInts(pub);\n  const calldata = await groth16.exportSolidityCallData(proof, pub);\n  const args = JSON.parse(\"[\" + calldata + \"]\");\n  return args;\n}\n\n// source: https://github.com/iden3/ffjavascript/blob/master/src/utils_bigint.js\nexport function unstringifyBigInts(o) {\n  if (typeof o == \"string\" && /^[0-9]+$/.test(o)) {\n    return BigInt(o);\n  } else if (Array.isArray(o)) {\n    return o.map(unstringifyBigInts);\n  } else if (typeof o == \"object\") {\n    const res = {};\n    const keys = Object.keys(o);\n    keys.forEach((k) => {\n      res[k] = unstringifyBigInts(o[k]);\n    });\n    return res;\n  } else {\n    return o;\n  }\n}\n\n// source: https://github.com/no2chem/bigint-buffer/blob/c4d61b5c4fcaab36c55130840e906c162dfce646/src/index.ts#L25\nexport function toBigIntLE(buf) {\n  const reversed = Buffer.from(buf);\n  reversed.reverse();\n  const hex = reversed.toString(\"hex\");\n  if (hex.length === 0) {\n    return BigInt(0);\n  }\n  return BigInt(`0x${hex}`);\n}\n","import { openDB, deleteDB } from \"idb\";\nimport { NetConfig } from \"../utils/config\";\nimport { Web3Service } from \"./web3\";\nconst INDEX_DB_ERROR =\n  \"A mutation operation was attempted on a database that did not allow mutations.\";\n\n// TODO method for migration, remove indexed\nclass IndexedDB {\n  constructor({ stores, dbName }) {\n    this.dbExists = false;\n    this.isBlocked = false;\n\n    this.options = {\n      upgrade(db) {\n        Object.values(db.objectStoreNames).forEach((value) => {\n          db.deleteObjectStore(value);\n        });\n\n        stores.forEach(({ name, keyPath, indexes }) => {\n          const store = db.createObjectStore(name, {\n            keyPath,\n            autoIncrement: true,\n          });\n\n          if (Array.isArray(indexes)) {\n            indexes.forEach(({ name, unique = false }) => {\n              store.createIndex(name, name, { unique });\n            });\n          }\n        });\n      },\n    };\n\n    this.dbName = dbName;\n  }\n\n  async initDB() {\n    try {\n      if (this.dbExists) {\n        return;\n      }\n\n      // version (optional): Schema version, or undefined to open the current version.\n      this.db = await openDB(this.dbName, 34, this.options);\n      this.onEventHandler();\n\n      this.dbExists = true;\n    } catch (err) {\n      // need for private mode firefox browser\n      if (err.message.includes(INDEX_DB_ERROR)) {\n        this.isBlocked = true;\n        return;\n      }\n\n      if (err.message.includes(\"less than the existing version\")) {\n        await this._removeExist();\n      }\n\n      console.error(`Method initDB has error: ${err.message}`);\n    }\n  }\n\n  onEventHandler() {\n    this.db.addEventListener(\"onupgradeneeded\", async () => {\n      await this._removeExist();\n    });\n  }\n\n  async _removeExist() {\n    await deleteDB(this.dbName);\n    this.dbExists = false;\n\n    await this.initDB();\n  }\n\n  async getFromIndex(params) {\n    if (this.isBlocked) {\n      return undefined;\n    }\n\n    try {\n      return await this._getFromIndex(params);\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async _getFromIndex({ storeName, indexName, key }) {\n    try {\n      const value = await this.db.getFromIndex(storeName, indexName, key);\n      return value;\n    } catch (err) {\n      throw new Error(`Method getFromIndex has error: ${err.message}`);\n    }\n  }\n\n  async getAllFromIndex(params) {\n    if (this.isBlocked) {\n      return [];\n    }\n\n    try {\n      return await this._getAllFromIndex(params);\n    } catch (err) {\n      return [];\n    }\n  }\n\n  async _getAllFromIndex({ storeName, indexName, key, count }) {\n    try {\n      const value = await this.db.getAllFromIndex(\n        storeName,\n        indexName,\n        key,\n        count\n      );\n      return value;\n    } catch (err) {\n      throw new Error(`Method getAllFromIndex has error: ${err.message}`);\n    }\n  }\n\n  async getItem({ storeName, key }) {\n    if (this.isBlocked) {\n      return undefined;\n    }\n\n    try {\n      const store = this.db.transaction(storeName).objectStore(storeName);\n\n      const value = await store.get(key);\n      return value;\n    } catch (err) {\n      throw new Error(`Method getItem has error: ${err.message}`);\n    }\n  }\n\n  async addItem({ storeName, data, key = \"\" }) {\n    if (this.isBlocked) {\n      return;\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, \"readwrite\");\n      const isExist = await tx.objectStore(storeName).get(key);\n\n      if (!isExist) {\n        await tx.objectStore(storeName).add(data);\n      }\n    } catch (err) {\n      throw new Error(`Method addItem has error: ${err.message}`);\n    }\n  }\n\n  async putItem({ storeName, data }) {\n    if (this.isBlocked) {\n      return;\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, \"readwrite\");\n      await tx.objectStore(storeName).put(data);\n    } catch (err) {\n      throw new Error(`Method putItem has error: ${err.message}`);\n    }\n  }\n\n  async getAll({ storeName }) {\n    if (this.isBlocked) {\n      return [];\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, \"readonly\");\n      const store = tx.objectStore(storeName);\n\n      const data = await store.getAll();\n      return data;\n    } catch (err) {\n      throw new Error(`Method getAll has error: ${err.message}`);\n    }\n  }\n\n  async clearStore({ storeName, mode = \"readwrite\" }) {\n    if (this.isBlocked) {\n      return;\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, mode);\n\n      await tx.objectStore(storeName).clear();\n    } catch (err) {\n      throw new Error(`Method clearStore has error: ${err.message}`);\n    }\n  }\n\n  async createTransactions({ storeName, data, mode = \"readwrite\" }) {\n    if (this.isBlocked) {\n      return;\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, mode);\n\n      await tx.objectStore(storeName).add(data);\n      await tx.done;\n    } catch (err) {\n      throw new Error(`Method createTransactions has error: ${err.message}`);\n    }\n  }\n\n  createMultipleTransactions({ storeName, data, index, mode = \"readwrite\" }) {\n    if (this.isBlocked) {\n      return;\n    }\n\n    try {\n      const tx = this.db.transaction(storeName, mode);\n\n      data.map((item) => {\n        if (item) {\n          tx.store.put({ ...item, ...index });\n        }\n      });\n    } catch (err) {\n      throw new Error(\n        `Method createMultipleTransactions has error: ${err.message}`\n      );\n    }\n  }\n}\n\nexport default async () => {\n  const networkName = Web3Service.networkName;\n  const instances = new Map();\n  const DEPOSIT_INDEXES = [\n    { name: \"transactionHash\", unique: false },\n    { name: \"commitment\", unique: true },\n  ];\n  const WITHDRAWAL_INDEXES = [{ name: \"nullifierHash\", unique: true }];\n  const LAST_EVENT_INDEXES = [{ name: \"name\", unique: false }];\n\n  const defaultState = [\n    {\n      name: \"encrypted_events\",\n      keyPath: \"transactionHash\",\n    },\n    {\n      name: \"lastEvents\",\n      keyPath: \"name\",\n      indexes: LAST_EVENT_INDEXES,\n    },\n  ];\n\n  for (const key of Object.keys(NetConfig)) {\n    const { tokens, nativeCurrency } = NetConfig[key];\n    const netId = Number(NetConfig[networkName]?.networkId);\n    const stores = [...defaultState];\n\n    if (netId === 1) {\n      stores.push({\n        name: \"register_events\",\n        keyPath: \"ensName\",\n      });\n    }\n\n    Object.keys(tokens).forEach((token) => {\n      Object.keys(tokens[token].instanceAddress).forEach((amount) => {\n        if (nativeCurrency === token && netId === 1) {\n          stores.push({\n            name: `stringify_bloom_${token}_${amount}`,\n            keyPath: \"hashBloom\",\n          });\n        }\n\n        stores.push(\n          {\n            name: `deposits_${token}_${amount}`,\n            keyPath: \"leafIndex\", // the key by which it refers to the object must be in all instances of the storage\n            indexes: DEPOSIT_INDEXES,\n          },\n          {\n            name: `withdrawals_${token}_${amount}`,\n            keyPath: \"transactionHash\",\n            indexes: WITHDRAWAL_INDEXES,\n          },\n          {\n            name: `stringify_tree_${token}_${amount}`,\n            keyPath: \"hashTree\",\n          }\n        );\n      });\n    });\n\n    const options = {\n      stores,\n      dbName: `tornado_cash_${netId}`,\n    };\n\n    const instance = new IndexedDB(options);\n\n    instances.set(options.dbName, instance);\n\n    await instance.initDB();\n\n    return instance;\n  }\n};\n","import Web3 from \"web3\";\nimport idb from \"./idb\";\nimport InstanceABI from \"../abis/ETHCleanMixer.json\";\nimport { sleep, formatEvents, capitalizeFirstLetter } from \"../utils/crypto\";\nimport { Web3Service } from \"./web3\";\nimport { NetConfig } from \"../utils/config\";\n\nconst eventsType = {\n  DEPOSIT: \"deposit\",\n};\n\nconst CONTRACT_INSTANCES = [\"0.01\"];\n\nclass EventService {\n  constructor({ netId, amount, currency, factoryMethods }) {\n    const nativeCurrency = \"eth\";\n\n    this.networkName = Web3Service.networkName;\n    this.idb = null;\n    this.netId = netId;\n    this.amount = amount;\n    this.currency = currency;\n    this.factoryMethods = factoryMethods;\n    this.contract = this.getContract();\n    this.isNative = nativeCurrency === this.currency;\n    this.hasCache =\n      this.isNative && (Number(this.netId) === 1 || Number(this.netId) === 56);\n  }\n\n  async init() {\n    this.idb = await idb();\n  }\n\n  getInstanceName(type) {\n    return `${type}s_${this.currency}_${this.amount}`;\n  }\n\n  async getEvents(type) {\n    let cachedEvents = await this.getEventsFromDB(type);\n\n    if (!cachedEvents && this.hasCache) {\n      cachedEvents = await this.getEventsFromCache(type);\n    }\n    return cachedEvents;\n  }\n\n  async updateEvents(type, cachedEvents) {\n    const deployedBlock = NetConfig[this.networkName]?.deployedBlock;\n    const savedEvents = cachedEvents || (await this.getEvents(type));\n\n    let fromBlock = parseInt(deployedBlock);\n\n    if (savedEvents) {\n      fromBlock = savedEvents.lastBlock + 1;\n    }\n\n    const newEvents = await this.getEventsFromBlock({\n      type,\n      fromBlock,\n    });\n\n    const allEvents = []\n      .concat(savedEvents?.events || [], newEvents?.events || [])\n      .sort((a, b) => {\n        if (a.leafIndex && b.leafIndex) {\n          return a.leafIndex - b.leafIndex;\n        }\n        return a.blockNumber - b.blockNumber;\n      });\n\n    const lastBlock = allEvents[allEvents.length - 1].blockNumber;\n\n    this.saveEvents({ events: allEvents, lastBlock, type });\n\n    return {\n      events: allEvents,\n      lastBlock,\n    };\n  }\n\n  async findEvent({ eventName, eventToFind, type }) {\n    const instanceName = this.getInstanceName(type);\n\n    let event = await this.idb.getFromIndex({\n      storeName: instanceName,\n      indexName: eventName,\n      key: eventToFind,\n    });\n\n    if (event) {\n      return event;\n    }\n\n    const savedEvents = await this.getEvents(type);\n    if (savedEvents) {\n      event = savedEvents.events.find(\n        (event) => event[eventName] === eventToFind\n      );\n      if (event) {\n        return event;\n      }\n    }\n\n    const freshEvents = await this.updateEvents(type);\n    event =\n      freshEvents &&\n      freshEvents?.events.find((event) => event[eventName] === eventToFind);\n\n    return event;\n  }\n\n  getContract() {\n    const address = NetConfig[this.networkName]?.tornadoAddress;\n    const web3 = new Web3(NetConfig[this.networkName]?.rpc);\n    return new web3.eth.Contract(InstanceABI.abi, address);\n  }\n\n  async getEventsFromDB(type) {\n    try {\n      const instanceName = this.getInstanceName(type);\n\n      const savedEvents = await this.idb.getAll({ storeName: instanceName });\n\n      if (!savedEvents || !savedEvents.length) {\n        return undefined;\n      }\n\n      const event = await this.idb.getFromIndex({\n        storeName: \"lastEvents\",\n        indexName: \"name\",\n        key: instanceName,\n      });\n\n      return {\n        events: savedEvents,\n        lastBlock: event.blockNumber,\n      };\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getStatisticsRpc({ eventsCount }) {\n    const deployedBlock = NetConfig[this.networkName]?.deployedBlock;\n    const savedEvents = await this.getEvents(eventsType.DEPOSIT);\n\n    if (savedEvents.events.length) {\n      const { events } = await this.updateEvents(\n        eventsType.DEPOSIT,\n        savedEvents\n      );\n      return events;\n    }\n\n    const blockRange = 4950;\n    const fromBlock = deployedBlock;\n    const { blockDifference, currentBlockNumber } = await this.getBlocksDiff({\n      fromBlock,\n    });\n\n    let numberParts =\n      blockDifference === 0 ? 1 : Math.ceil(blockDifference / blockRange);\n    const part = Math.ceil(blockDifference / numberParts);\n\n    let events = [];\n    let toBlock = currentBlockNumber;\n\n    if (fromBlock < currentBlockNumber) {\n      for (let i = 0; i < numberParts; i++) {\n        try {\n          await sleep(200);\n          const partOfEvents = await this.getEventsPartFromRpc({\n            fromBlock: toBlock - part,\n            toBlock,\n            type: eventsType.DEPOSIT,\n          });\n\n          if (partOfEvents) {\n            events = events.concat(partOfEvents.events);\n            if (eventsCount <= events.length) {\n              break;\n            }\n          }\n          toBlock -= part;\n        } catch {\n          numberParts = numberParts + 1;\n        }\n      }\n      if (eventsCount !== events.length) {\n        const savedEvents = await this.getEvents(eventsType.DEPOSIT);\n        events = events.concat(savedEvents?.events || []);\n      }\n    }\n\n    return events;\n  }\n\n  async getBlocksDiff({ fromBlock }) {\n    const _web3 = new Web3(NetConfig[this.networkName]?.rpc).eth;\n    const currentBlockNumber = await _web3.getBlockNumber();\n\n    return {\n      currentBlockNumber,\n      blockDifference: Math.ceil(currentBlockNumber - fromBlock),\n    };\n  }\n\n  async getEventsPartFromRpc({ fromBlock, toBlock, type }) {\n    try {\n      const { currentBlockNumber } = await this.getBlocksDiff({ fromBlock });\n\n      if (fromBlock > currentBlockNumber) {\n        return {\n          events: [],\n          lastBlock: fromBlock,\n        };\n      }\n\n      const events = await this.contract.getPastEvents(\n        capitalizeFirstLetter(type),\n        {\n          fromBlock,\n          toBlock,\n        }\n      );\n\n      if (!events?.length) {\n        return {\n          events: [],\n          lastBlock: fromBlock,\n        };\n      }\n      return {\n        events: formatEvents(events, type),\n        lastBlock: events[events.length - 1].blockNumber,\n      };\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getBatchEventsFromRpc({ fromBlock, type }) {\n    try {\n      const blockRange = 4950;\n      const { blockDifference, currentBlockNumber } = await this.getBlocksDiff({\n        fromBlock,\n      });\n\n      let numberParts =\n        blockDifference === 0 ? 1 : Math.ceil(blockDifference / blockRange);\n      const part = Math.ceil(blockDifference / numberParts);\n\n      let events = [];\n      let toBlock = fromBlock + part;\n\n      if (fromBlock < currentBlockNumber) {\n        if (toBlock >= currentBlockNumber) {\n          toBlock = \"latest\";\n          numberParts = 1;\n        }\n\n        for (let i = 0; i < numberParts; i++) {\n          try {\n            await sleep(200);\n            const partOfEvents = await this.getEventsPartFromRpc({\n              fromBlock,\n              toBlock,\n              type,\n            });\n            if (partOfEvents) {\n              events = events.concat(partOfEvents.events);\n            }\n            fromBlock = toBlock;\n            toBlock += part;\n          } catch {\n            numberParts = numberParts + 1;\n          }\n        }\n        if (events.length) {\n          return {\n            events,\n            lastBlock: toBlock === \"latest\" ? currentBlockNumber : toBlock,\n          };\n        }\n      }\n      return undefined;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getEventsFromRpc({ fromBlock, type }) {\n    try {\n      let events;\n\n      if (Number(this.netId) === 56) {\n        const rpcEvents = await this.getBatchEventsFromRpc({ fromBlock, type });\n        events = rpcEvents?.events || [];\n      } else {\n        const rpcEvents = await this.getEventsPartFromRpc({\n          fromBlock,\n          toBlock: \"latest\",\n          type,\n        });\n        events = rpcEvents?.events || [];\n      }\n      return events;\n    } catch (err) {\n      return [];\n    }\n  }\n\n  async getEventsFromBlock({ fromBlock, type }) {\n    try {\n      const rpcEvents = await this.getEventsFromRpc({ fromBlock, type });\n\n      const allEvents = [].concat(rpcEvents || []);\n      if (allEvents.length) {\n        return {\n          events: allEvents,\n          lastBlock: allEvents[allEvents.length - 1].blockNumber,\n        };\n      }\n      return undefined;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async saveEvents({ events, lastBlock, type }) {\n    try {\n      if (!events || !events.length || this.idb.isBlocked) {\n        return;\n      }\n\n      const instanceName = this.getInstanceName(type);\n\n      this.idb.createMultipleTransactions({\n        data: events,\n        storeName: instanceName,\n      });\n\n      await this.idb.putItem({\n        data: {\n          blockNumber: lastBlock,\n          name: instanceName,\n        },\n        storeName: \"lastEvents\",\n      });\n    } catch (err) {\n      console.error(\"saveEvents has error:\", err.message);\n    }\n  }\n}\n\nclass EventsFactory {\n  constructor(rpcUrl) {\n    this.provider = new Web3(rpcUrl).eth;\n    this.instances = new Map();\n  }\n\n  getBlockNumber() {\n    return this.provider.getBlockNumber();\n  }\n\n  getContract(address) {\n    return new this.provider.Contract(InstanceABI.abi, address);\n  }\n\n  getService(payload) {\n    const instanceName = `${payload.currency}_${payload.amount}`;\n    if (this.instances.has(instanceName)) {\n      return this.instances.get(instanceName);\n    }\n\n    const instance = new EventService({\n      ...payload,\n      factoryMethods: {\n        getContract: this.getContract,\n        getBlockNumber: this.getBlockNumber,\n      },\n    });\n    this.instances.set(instanceName, instance);\n    return instance;\n  }\n}\n\nexport { EventsFactory };\n","import BloomFilter from \"bloomfilter.js\";\nimport idb from \"./idb\";\n\nclass BloomService {\n  constructor({\n    netId,\n    amount,\n    commitment,\n    instanceName,\n    fileName,\n    fileFolder,\n  }) {\n    this.amount = amount;\n    this.fileFolder = fileFolder;\n    this.commitment = commitment;\n    this.instanceName = instanceName;\n    this.fileName = `${fileFolder}/${fileName}`;\n\n    this.idb = null;\n  }\n\n  async init() {\n    this.idb = await idb();\n  }\n\n  async downloadBloom() {\n    const cachedBloom = await download({\n      name: this.fileName,\n      contentType: \"string\",\n      eventName: this.fileFolder,\n    });\n\n    if (!cachedBloom) {\n      throw new Error(\"Cant download file\");\n    }\n\n    return BloomFilter.deserialize(cachedBloom);\n  }\n\n  async getBloomFromDB() {\n    try {\n      const stringifyCachedBloom = await this.idb.getAll({\n        storeName: `stringify_bloom_${this.instanceName}`,\n      });\n\n      if (!stringifyCachedBloom || !stringifyCachedBloom.length) {\n        return undefined;\n      }\n\n      const [{ tree }] = stringifyCachedBloom;\n\n      return BloomFilter.deserialize(tree);\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async checkBloom() {\n    let cachedBloom = await this.getBloomFromDB();\n    if (!cachedBloom) {\n      throw new Error(\"Can't find bloom in DB\");\n    }\n    return cachedBloom.test(this.commitment);\n  }\n\n  async saveBloom({ bloom }) {\n    try {\n      await this.idb.putItem({\n        storeName: `stringify_bloom_${this.instanceName}`,\n        data: {\n          hashBloom: \"1\", // need for replace bloom\n          tree: bloom.serialize(),\n        },\n        key: \"hashBloom\",\n      });\n    } catch (err) {\n      console.error(\"saveBloom has error:\", err.message);\n    }\n  }\n}\n\nexport const bloomService = (payload) => new BloomService(payload);\n","import { buildMimcSponge } from \"circomlibjs\";\n\nclass Mimc {\n  constructor() {\n    this.sponge = null;\n    this.hash = null;\n    this.initMimc();\n  }\n\n  async initMimc() {\n    this.sponge = await buildMimcSponge();\n    this.hash = (left, right) => this.sponge.F.toString(this.sponge.multiHash([BigInt(left), BigInt(right)]));\n  }\n}\n\nconst mimc = new Mimc();\n\nexport { mimc };\n","import { MerkleTree, PartialMerkleTree } from \"fixed-merkle-tree\";\nimport idb from \"./idb\";\nimport { bloomService } from \"./bloom\";\nimport { NetConfig } from \"../utils/config\";\nimport { mimc } from \"./mimc\";\nimport { Web3Service } from \"./web3\";\n\nexport const trees = {\n  PARTS_COUNT: 4,\n  LEVELS: 20,\n};\n\nclass MerkleTreeService {\n  constructor({ netId, amount, currency, commitment, instanceName }) {\n    this.netId = netId;\n    this.amount = amount;\n    this.currency = currency;\n    this.commitment = commitment;\n    this.instanceName = instanceName;\n    this.idb = null;\n    this.bloomService = null;\n    this.networkName = Web3Service.networkName;\n  }\n\n  async init() {\n    this.idb = await idb();\n    this.bloomService = bloomService({\n      netId: this.netId,\n      amount: this.amount,\n      commitment: this.commitment,\n      instanceName: this.instanceName,\n      fileFolder: \"trees\",\n      fileName: `deposits_${this.currency}_${this.amount}_bloom.json.zip`,\n    });\n    await this.bloomService.init();\n  }\n\n  getFileName(partNumber = trees.PARTS_COUNT) {\n    return `trees/deposits_${this.currency}_${this.amount}_slice${partNumber}.json.zip`;\n  }\n\n  createTree({ events }) {\n    return new MerkleTree(\n      NetConfig[this.networkName]?.merkleTreeHeight,\n      events,\n      {\n        zeroElement: NetConfig[this.networkName]?.emptyElement,\n        hashFunction: mimc.hash,\n      }\n    );\n  }\n\n  // async downloadEdge(name) {\n  //   const slicedEdge = await download({\n  //     name,\n  //     eventName: \"trees\",\n  //     contentType: \"string\",\n  //   });\n\n  //   if (!slicedEdge) {\n  //     throw new Error(\"Cant download file\");\n  //   }\n\n  //   return JSON.parse(slicedEdge);\n  // }\n\n  createPartialTree({ edge, elements }) {\n    return new PartialMerkleTree(trees.LEVELS, edge, elements, {\n      zeroElement: GlobalConfig.ganache.emptyElement,\n      hashFunction: mimc.hash,\n    });\n  }\n\n  async getTreeFromCache() {\n    try {\n      const initialEdge = await this.downloadEdge(this.getFileName());\n\n      const partialTree = this.createPartialTree(initialEdge);\n\n      if (initialEdge.elements.includes(this.commitment)) {\n        return partialTree;\n      }\n\n      const isCacheHasCommitment = await this.bloomService.checkBloom();\n\n      if (!isCacheHasCommitment) {\n        return partialTree;\n      }\n\n      let edge;\n      let elements = [];\n\n      for (let i = trees.PARTS_COUNT - 1; i > 0; i--) {\n        const slicedEdge = await this.downloadEdge(this.getFileName(i));\n\n        edge = slicedEdge.edge;\n        elements = [].concat(slicedEdge.elements, elements);\n\n        if (slicedEdge.elements.includes(this.commitment)) {\n          break;\n        }\n      }\n\n      partialTree.shiftEdge(edge, elements);\n\n      return partialTree;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getTreeFromDB() {\n    try {\n      const stringifyCachedTree = await this.idb.getAll({\n        storeName: `stringify_tree_${this.instanceName}`,\n      });\n\n      if (!stringifyCachedTree || !stringifyCachedTree.length) {\n        return undefined;\n      }\n\n      const [{ tree }] = stringifyCachedTree;\n      const parsedTree = JSON.parse(tree);\n      const isPartial = \"_edgeLeaf\" in parsedTree;\n\n      const savedTree = isPartial\n        ? PartialMerkleTree.deserialize(parsedTree, mimc.hash)\n        : MerkleTree.deserialize(parsedTree, mimc.hash);\n\n      if (isPartial) {\n        const edgeIndex = savedTree.edgeIndex;\n        const indexOfEvent = savedTree.indexOf(this.commitment);\n\n        // ToDo save edges mapping { edgeIndex, edgeSlice }\n        if (indexOfEvent === -1 && edgeIndex !== 0) {\n          const isCacheHasCommitment = await this.bloomService.checkBloom();\n\n          if (isCacheHasCommitment) {\n            let edge;\n            let elements = [];\n\n            for (let i = trees.PARTS_COUNT; i > 0; i--) {\n              const slicedEdge = await this.downloadEdge(this.getFileName(i));\n\n              if (edgeIndex > slicedEdge.edge.edgeIndex) {\n                edge = slicedEdge.edge;\n                elements = [].concat(slicedEdge.elements, elements);\n              }\n\n              if (slicedEdge.elements.includes(this.commitment)) {\n                break;\n              }\n            }\n\n            savedTree.shiftEdge(edge, elements);\n          }\n        }\n      }\n\n      return savedTree;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getTree() {\n    // const { nativeCurrency } = GlobalConfig.ganache;\n    // const hasCache =\n    //   nativeCurrency === this.currency && Number(this.netId) === 1;\n\n    let cachedTree = await this.getTreeFromDB();\n\n    // if (!cachedTree && hasCache) {\n    //   cachedTree = await this.getTreeFromCache();\n    // }\n    return cachedTree;\n  }\n\n  async saveTree({ tree }) {\n    try {\n      await this.idb.putItem({\n        storeName: `stringify_tree_${this.instanceName}`,\n        data: {\n          hashTree: \"1\", // need for replace tree\n          tree: tree.toString(),\n        },\n        key: \"hashTree\",\n      });\n    } catch (err) {\n      console.error(\"saveCachedTree has error:\", err.message);\n    }\n  }\n}\n\nclass TreesFactory {\n  instances = new Map();\n\n  getService = (payload) => {\n    const instanceName = `${payload.currency}_${payload.amount}`;\n    if (this.instances.has(instanceName)) {\n      return this.instances.get(instanceName);\n    }\n\n    const instance = new MerkleTreeService(payload);\n    this.instances.set(instanceName, instance);\n    return instance;\n  };\n}\n\nexport const treesInterface = new TreesFactory();\n","import { NetConfig } from \"../utils/config\";\nimport { ethers } from \"ethers\";\nimport {\n  checkCommitments,\n  parseNote,\n  toFixedHex,\n  pedersenHash,\n  rbuffer,\n  toBigIntLE,\n  genProofArgs,\n} from \"../utils/crypto\";\nimport { groth16 } from \"snarkjs\";\nimport { EventsFactory } from \"./events\";\nimport { treesInterface } from \"./merkleTree\";\nimport TornadoAbi from \"../abis/ETHCleanMixer.json\";\nimport { Web3Service } from \"./web3\";\n\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nclass SnarkService {\n  constructor() {\n    this.tornadoContract = null;\n    this.connectTornadoContract = null;\n  }\n\n  initTornadoContract(address) {\n    const signer = Web3Service.signer;\n    const provider = Web3Service.provider;\n\n    if (!address) {\n      console.error(\"Clean mixer address not passed while inititialization\");\n      return false;\n    }\n    if (!this.tornadoContract) {\n      this.tornadoContract = new ethers.Contract(\n        address,\n        TornadoAbi.abi,\n        provider\n      );\n      this.connectTornadoContract = this.tornadoContract.connect(signer);\n      return true;\n    }\n    return true;\n  }\n\n  async prepareCommitment() {\n    const networkName = Web3Service.networkName;\n    const denomination = NetConfig[networkName].denomination;\n    const netId = NetConfig[networkName].networkId;\n    const prefix = `cleanMixer-eth-${denomination}-${netId}`;\n    const randomBuf = rbuffer(31);\n    const secret = toBigIntLE(randomBuf);\n    const commitment = pedersenHash(randomBuf).toString();\n    const commitmentHex = toFixedHex(commitment);\n    const note = `${prefix}-${secret}-${commitmentHex}`;\n    return { commitmentHex, note };\n  }\n\n  async sendDeposit(commitment, _referrer) {\n    const networkName = Web3Service.networkName;\n    const signer = Web3Service.signer;\n    const referrer = _referrer || ZERO_ADDRESS;\n\n    if (!signer) {\n      throw new Error(\"Please connect Metamask first\");\n    }\n\n    if (!this.tornadoContract) {\n      throw new Error(\"Please initiate tornadoContract first\");\n    }\n\n    const connectTornadoContract = this.tornadoContract.connect(signer);\n\n    if (!commitment) {\n      throw new Error(\"Error generating commitment\");\n    }\n\n    const denomination = NetConfig[networkName].denomination;\n    const options = { value: ethers.utils.parseEther(String(denomination)) };\n    const tx = await connectTornadoContract.deposit(\n      commitment,\n      referrer,\n      options\n    );\n    const result = await tx.wait();\n\n    return result;\n  }\n\n  async updateEvents(payload) {\n    try {\n      const networkName = Web3Service.networkName;\n      const url = NetConfig[networkName].rpc;\n      const eventsFactory = new EventsFactory(url);\n      const eventService = eventsFactory.getService(payload);\n      await eventService.init();\n      const freshEvents = await eventService.updateEvents(payload.type);\n      return freshEvents;\n    } catch (err) {\n      throw new Error(`Method updateEvents has error: ${err.message}`);\n    }\n  }\n\n  async createSnarkProof({ root, note, tree, leafIndex, recipient }) {\n    const wasm = Web3Service.wasm;\n    const zkey = Web3Service.zkey;\n\n    const { pathElements, pathIndices } = tree.path(leafIndex);\n    const input = {\n      secret: note.secret.toString(),\n      root,\n      pathElements,\n      pathIndices,\n    };\n\n    if (!wasm || !zkey) {\n      throw new Error(\"Clean mixer keys not loaded!\");\n    }\n\n    let { proof, publicSignals } = await groth16.fullProve(input, wasm, zkey);\n    const proofArgs = await genProofArgs(proof, publicSignals);\n    const returnArguments = proofArgs;\n\n    return { returnArguments };\n  }\n\n  async buildTree({ currency, amount, netId, commitmentHex }) {\n    const treeInstanceName = `${currency}_${amount}`;\n    const params = { netId, amount, currency };\n\n    const treeService = treesInterface.getService({\n      ...params,\n      commitment: commitmentHex,\n      instanceName: treeInstanceName,\n    });\n\n    await treeService.init();\n\n    const [cachedTree, eventsData] = await Promise.all([\n      treeService.getTree(),\n      this.updateEvents({ ...params, type: \"deposit\" }),\n    ]);\n\n    const commitments = eventsData.events\n      .sort((a, b) => a.leafIndex - b.leafIndex)\n      .map((el) => el.commitment.toString(10));\n\n    let tree = cachedTree;\n    if (tree) {\n      const newLeaves = commitments.slice(tree.elements.length);\n      tree.bulkInsert(newLeaves);\n    } else {\n      checkCommitments(eventsData.events);\n      tree = treeService.createTree({ events: commitments });\n    }\n\n    const root = toFixedHex(tree.root);\n    const isKnownRoot = await this.tornadoContract.isKnownRoot(root);\n\n    if (!isKnownRoot) {\n      throw new Error(\"Invalid root!\");\n    }\n\n    await treeService.saveTree({ tree });\n    return { tree, root };\n  }\n\n  async prepareWithdraw(note, recipient) {\n    try {\n      const parsedNote = parseNote(note);\n      const { currency, amount, netId, secret, commitmentHash } = parsedNote;\n\n      const { tree, root } = await this.buildTree({\n        currency,\n        amount,\n        netId,\n        commitmentHash,\n      });\n      const { returnArguments } = await this.createSnarkProof({\n        root,\n        tree,\n        note: parsedNote,\n        leafIndex: tree.indexOf(commitmentHash),\n        recipient,\n      });\n\n      const nullifierHash = commitmentHash;\n\n      return { returnArguments, root, nullifierHash };\n    } catch (e) {\n      console.error(e);\n      throw new Error(e.message);\n    }\n  }\n\n  async withdraw(\n    pi_a,\n    pi_b,\n    pi_c,\n    args,\n    root,\n    nullifierHash,\n    account,\n    relayerAddress,\n    fee,\n    relay\n  ) {\n    try {\n      await this.connectTornadoContract.withdraw(\n        pi_a,\n        pi_b,\n        pi_c,\n        args,\n        root,\n        nullifierHash,\n        account,\n        account,\n        fee,\n        fee\n      );\n\n      return true;\n    } catch (e) {\n      console.error(e);\n      throw new Error(e.message);\n    }\n  }\n}\n\nexport const snarkServiceInterface = new SnarkService();\n","import { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport Jszip from \"jszip\";\n\nconst jszip = new Jszip();\nconst knownResources = [\"https://gateway.pinata.cloud/ipfs/\", \"https://ipfs.io/ipfs/\", \"https://dweb.link/ipfs/\"];\n\nclass _Web3Service {\n  constructor() {\n    this.provider = null;\n    this.signer = null;\n    this.chainId = null;\n    this.networkName = null;\n    this.wasm = null;\n    this.zkey = null;\n  }\n\n  async connect() {\n    try {\n      if (window.ethereum) {\n        this.provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        const { chainId, name } = await this.provider.getNetwork();\n        this.chainId = chainId;\n        this.networkName = name;\n\n        await this.provider.send(\"eth_requestAccounts\", []);\n        this.signer = this.provider.getSigner();\n\n        const [wasm, zkey] = await Promise.all([\n          this.getCleanMixerKeys(process.env.REACT_APP_CIRCOM_WASM_CID, \"circuit.wasm\", \"arraybuffer\"),\n          this.getCleanMixerKeys(process.env.REACT_APP_CIRCUIT_ZKEY_CID, \"circuit_final.zkey\", \"arraybuffer\"),\n        ]);\n\n        this.wasm = wasm;\n        this.zkey = zkey;\n\n        return await this.signer.getAddress();\n      }\n      return null;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async getCleanMixerKeys(cid, name, contentType, retryAttempt = 0) {\n    try {\n      console.log(\"Using this IPFS gateway: \", knownResources[retryAttempt]);\n\n      const IPFSGateway = knownResources[retryAttempt];\n      const response = await axios.get(`${IPFSGateway}/${cid}`, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100);\n          console.log(\"Downloading keys: \", progress);\n        },\n      });\n\n      const zip = await jszip.loadAsync(response.data);\n      const file = zip.file(name);\n      const content = await file.async(contentType);\n      const url = URL.createObjectURL(new Blob([content]));\n\n      return url;\n    } catch (err) {\n      console.log(err);\n      if (retryAttempt < knownResources.length) {\n        retryAttempt++;\n        const response = await this.getCleanMixerKeys(cid, name, contentType, retryAttempt);\n        return response;\n      }\n    }\n  }\n\n  async getCurrentAccount() {\n    if (this.signer) {\n      return await this.signer.getAddress();\n    } else {\n      if (window.ethereum) {\n        this.provider = new ethers.providers.Web3Provider(window.ethereum);\n        await this.provider.send(\"eth_requestAccounts\", []);\n        this.signer = this.provider.getSigner();\n        return await this.signer.getAddress();\n      } else {\n        return null;\n      }\n    }\n  }\n}\n\nexport const Web3Service = new _Web3Service();\n","export const NetConfig = {\n  goerli: {\n    tornadoAddress: \"0x7BF7Bd7eCc12fbd5458Ad03FADC1e3B0Da26c985\",\n    networkId: \"5\",\n    networkName: \"Goerli\",\n    denomination: \"0.01\",\n    rpc: \"https://goerli.infura.io/v3/a25d2139d055489ca5bd2db9d0c66b3a\",\n    deployedBlock: \"7586389\",\n    nativeCurrency: \"eth\",\n    tokens: {\n      eth: {\n        instanceAddress: {\n          0.01: \"0x9dE40789bC4ef0CAf4AAF60A46CE5aF7030BE66E\",\n        },\n        symbol: \"ETH\",\n        decimals: 18,\n      },\n    },\n    merkleTreeHeight: 20,\n    emptyElement: \"21663839004416932945382355908790599225266501822907911457504978515578255421292\",\n  },\n  ganache: {\n    tornadoAddress: \"0x87f8EEC2e63B7e3815B96586f3dA7DC577d71617\",\n    networkId: \"5777\",\n    networkName: \"Ganache\",\n    denomination: \"0.1\",\n    rpc: \"http://127.0.0.1:7545\",\n    deployedBlock: \"0\",\n    nativeCurrency: \"eth\",\n    tokens: {\n      eth: {\n        instanceAddress: {\n          0.1: \"0x9dE40789bC4ef0CAf4AAF60A46CE5aF7030BE66E\",\n        },\n        symbol: \"ETH\",\n        decimals: 18,\n      },\n    },\n    merkleTreeHeight: 20, //32,\n    emptyElement: \"21663839004416932945382355908790599225266501822907911457504978515578255421292\",\n  },\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = function() {}\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t0: 0\n};\n\nvar deferredModules = [\n\t[26981,1,2],\n\t[40979,1,2]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = function() {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tvar executeModules = data[3];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclean_mixer\"] = self[\"webpackChunkclean_mixer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = function() {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = function() {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (function() {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}